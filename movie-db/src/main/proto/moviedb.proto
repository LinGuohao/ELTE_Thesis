syntax = "proto3";
option java_multiple_files = true;
package com.guohaohome.moviedb.proto;
import "google/protobuf/empty.proto";


message MovieID{
  string id = 1;
}

message AllMovieIDListResponse{
  repeated MovieID reply = 1;
}

message InfoResponse {
  string id = 1;
  string name =2;
  double IMDb = 3;
  int32 Tomatoes = 4;
}

message InfoByIDRequest{
  string id = 1;
}
message InfoRequest{
  string id = 1;
  string name =2;
  double IMDb = 3;
  int32 Tomatoes = 4;
}

message ObjectList{
  string ObjectName = 1;
}

message ObjectListRequest{
  string bucketName = 1;
  string keyPrefix = 2;

}

message ObjectListResponse{
  repeated ObjectList reply = 1;
}

message LineList{
  string id=1;
  string sentence=2;
  string author=3;
  string lineID=4;
}

message deleteLineRequest{
  string id=1;
  string lineID=2;
}

message LineListResponse{
  repeated LineList reply = 1;
}

message MusicInfo{
  string id = 1;
  string address = 2;
  string musicName = 3;
  string artist = 4;
}

message MusicListResponse{
  repeated MusicInfo reply = 1;
}

message UsernameRequest{
  string username = 1;
}

message BooleanResponse{
  int32 isTrue = 1;
}

message UserInfo{
  string username = 1;
  string password = 2;
  string fullName = 3;
  string roles = 4;
}

message VerificationRequest{
  string username = 1;
  string password = 2;
}


service MoviedbService{
  rpc GetAllID (google.protobuf.Empty) returns (AllMovieIDListResponse){}
  rpc GetInfoByID(InfoByIDRequest) returns (InfoResponse) {}
  rpc UpdateByID(InfoRequest) returns (google.protobuf.Empty){}
  rpc InsertMovie(InfoRequest) returns (google.protobuf.Empty){}
  rpc GetOssObjectList(ObjectListRequest) returns(ObjectListResponse){}
  rpc GetLines(InfoByIDRequest) returns(LineListResponse){}
  rpc InsertLine(LineList) returns (BooleanResponse){}
  rpc DeleteLine(deleteLineRequest) returns (BooleanResponse){}
  rpc GetMusics(InfoByIDRequest) returns(MusicListResponse){}
  rpc JudgeUsername(UsernameRequest) returns(BooleanResponse){}
  rpc InsertUser(UserInfo) returns (BooleanResponse){}
  rpc GetUserByUserName(UsernameRequest) returns (UserInfo){}
  rpc AuthenticateUser(VerificationRequest) returns(UserInfo){}
}
